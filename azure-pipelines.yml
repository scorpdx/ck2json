trigger:
- master

strategy:
  matrix:
    windows:
      imageName: 'windows-latest'
      rustup_toolchain: stable
      rust_target: 'x86_64-pc-windows-msvc'
    mac:
      imageName: 'macOS-latest'
      rustup_toolchain: stable
      rust_target: 'x86_64-apple-darwin'
    linux:
      imageName: 'ubuntu-latest'
      rustup_toolchain: stable
      rust_target: 'x86_64-unknown-linux-gnu'

pool:
  vmImage: $(imageName)

# https://nbsoftsolutions.com/blog/azure-pipelines-for-rust-projects
steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-host %RUST_TARGET% --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Install rust (win)
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: cargo rustc --target $(RUST_TARGET) --release --bin ck2json --target-dir $(Build.ArtifactStagingDirectory) -- -C lto
    displayName: Compile ck2json
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'target'
      publishLocation: 'Container'